name: Build on Ubuntu

on: [push, pull_request]
env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        compiler: [gcc, clang]

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: >-
        sudo apt-get update ;
        sudo apt-get install -y build-essential software-properties-common gcc g++ llvm clang sed python3 tar wget cmake autoconf automake libtool curl make unzip zlib1g-dev libpng-dev vim-common git portaudio19-dev libogg-dev libvorbis-dev googletest libglu1-mesa-dev freeglut3-dev mesa-common-dev libcairo2-dev libprotobuf-dev protobuf-compiler mesa-vulkan-drivers libvulkan1 libvulkan-dev qt6-base-dev qt6-tools-dev qt6-tools-dev-tools qt6-l10n-tools libxkbcommon-dev glslang-dev glslang-tools libglx-mesa0 vulkan-validationlayers ;

    - name: Configure CMake (GCC)
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_VULKAN_RENDERER:boolean=ON
      if: matrix.compiler == 'gcc'

    - name: Configure CMake (Clang)
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_VULKAN_RENDERER:boolean=ON -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/cmake/clang-toolchain.cmake
      if: matrix.compiler == 'clang'

    - name: Build
      run: cmake --build ${{github.workspace}}/build
#!/bin/sh

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

YEAR=`date +"%Y"`
FILES=`git diff --cached $against --name-only --diff-filter=ACMR | grep -E "\.(c|cpp|h|hpp)$"`
PYTHON_FILES=`git diff --cached $against --name-only --diff-filter=ACMR | grep -E "\.(py)$"`
PROTO_FILES=`git diff --cached $against --name-only --diff-filter=ACMR | grep -E "\.(proto)$"`
for FILE in $FILES; do
	${ASTYLE_EXECUTABLE} ${ASTYLE_OPTIONS} < $FILE | cmp -s $FILE -
	if [ $? -ne 0 ]; then
		echo "[!] $FILE does not respect coding style," >&2
		echo "[!] please build the 'format-code' target." >&2
		echo "[!] For example make format-code" >&2
		exit 1
	fi
done

EXIT_CODE=0
for FILE in $FILES; do
	"${GREP_EXECUTABLE}" -qIl "Copyright (C) [0-9,-]*$YEAR" $FILE
	if [ $? -ne 0 ]; then
		echo "[!] $FILE" >&2
        EXIT_CODE=1
	fi
done
if [ $EXIT_CODE -ne 0 ]; then
    echo "[!] have an out of date copyright notice," >&2
    echo "[!] please update it to include the current year." >&2
    echo "[!] For example: /* Copyright (C) $YEAR */." >&2
    exit 1
fi

for FILE in $PYTHON_FILES; do
	"${GREP_EXECUTABLE}" -qIl "Copyright (C) [0-9,-]*$YEAR" $FILE
	if [ $? -ne 0 ]; then
		echo "[!] $FILE" >&2
        EXIT_CODE=1
	fi
done
if [ $EXIT_CODE -ne 0 ]; then
    echo "[!] have an out of date copyright notice," >&2
    echo "[!] please update it to include the current year." >&2
    echo "[!] For example: /* Copyright (C) $YEAR */." >&2
    exit 1
fi

for FILE in $PROTO_FILES; do
	"${GREP_EXECUTABLE}" -qIl "Copyright (C) [0-9,-]*$YEAR" $FILE
	if [ $? -ne 0 ]; then
		echo "[!] $FILE" >&2
        EXIT_CODE=1
	fi
done
if [ $EXIT_CODE -ne 0 ]; then
    echo "[!] have an out of date copyright notice," >&2
    echo "[!] please update it to include the current year." >&2
    echo "[!] For example: /* Copyright (C) $YEAR */." >&2
    exit 1
fi

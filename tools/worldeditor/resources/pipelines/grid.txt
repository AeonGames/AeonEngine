AEONPLN
vert:
    "#version 450\n"
    "#ifndef VULKAN\n"
    "#define gl_InstanceIndex gl_InstanceID\n"
    "#endif\n"
    "layout(binding = 0, std140) uniform Matrices{\n"
    "mat4 ModelMatrix;\n"
    "mat4 ProjectionMatrix;\n"
    "mat4 ViewMatrix;\n"
    "};\n"
    "layout(binding = 1, std140) uniform Properties{\n"
    "vec4 OddLineColor;\n"
    "vec4 EvenLineColor;\n"
    "vec4 CentralLineColor;\n"
    "vec4 BorderLineColor;\n"
    "vec3 Scale;\n"
    "vec3 StartingPosition;\n"
    "vec3 Offset;\n"
    "uint LineCount;\n"
    "};\n"
    "layout(location = 0) in vec3 VertexPosition;\n"
    "layout(location = 0) flat out uint instance_index;\n"
    "void main()\n"
    "{\n"
    "instance_index = uint ( gl_InstanceIndex );\n"
    "gl_Position =  ProjectionMatrix *\n"
    "               ViewMatrix *\n"
    "               vec4(StartingPosition + (VertexPosition*Scale) + ( Offset * gl_InstanceIndex ),1.0);\n"
    "}\n"
frag:
    "#version 450\n"
    "layout ( location = 0 ) out vec4 FragColor;\n"
    "layout ( location = 0 ) flat in uint instance_index;\n"
    "layout(binding = 1, std140) uniform Properties{\n"
    "vec4 OddLineColor;\n"
    "vec4 EvenLineColor;\n"
    "vec4 CentralLineColor;\n"
    "vec4 BorderLineColor;\n"
    "vec3 Scale;\n"
    "vec3 StartingPosition;\n"
    "vec3 Offset;\n"
    "uint LineCount;\n"
    "};\n"
    "void main ( void )\n"
    "{\n"
    "    if ( ( instance_index != 0u ) && ( instance_index != ( LineCount - 1u ) ) )\n"
    "    {"
    "        if ( instance_index == ( LineCount / 2u ) )\n"
    "        {\n"
    "            FragColor = CentralLineColor;\n"
    "        }\n"
    "        else if ( instance_index % 2u == 0u )\n"
    "        {\n"
    "            FragColor = OddLineColor;\n"
    "        }\n"
    "        else\n"
    "        {\n"
    "            FragColor = EvenLineColor;\n"
    "        }\n"
    "    }\n"
    "    else\n"
    "    {\n"
    "        FragColor = BorderLineColor;\n"
    "    }\n"
    "}\n"

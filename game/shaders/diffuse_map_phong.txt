AEONPLN
topology: TRIANGLE_LIST
uniform {
  name: "LightPosition"
  type: VECTOR_FLOAT_3
}
uniform {
  name: "Kd"
  type: VECTOR_FLOAT_3
}
sampler {
    name: "DiffuseMap"
}
vertex_shader {
  code:
  "layout(location = 0) out vec3 LightIntensity;\n"
  "layout(location = 1) out vec2 CoordUV;\n"
  "void main()\n"
  "{\n"
  "if ( length ( VertexNormal ) != 0 )\n"
  "{\n"
  "      vec3 vertex_normal =\n"
  "normalize(( mat3(skeleton[VertexWeightIndices[0]]) * (VertexWeights[0] * VertexNormal) ) +\n"
  "          ( mat3(skeleton[VertexWeightIndices[1]]) * (VertexWeights[1] * VertexNormal) ) +\n"
  "          ( mat3(skeleton[VertexWeightIndices[2]]) * (VertexWeights[2] * VertexNormal) ) +\n"
  "          ( mat3(skeleton[VertexWeightIndices[3]]) * (VertexWeights[3] * VertexNormal) ));\n"
  "vec3 tnorm = normalize ( mat3(ViewMatrix) * vertex_normal );\n"
  "vec4 eyeCoords = ViewMatrix /* ModelMatrix */* vec4 ( VertexPosition, 1.0 );\n"
  "vec3 s = normalize ( LightPosition - eyeCoords.xyz );\n"
  "LightIntensity = Kd * max ( dot ( s, tnorm ), 0.0 );\n"
  "}\n"
  "else\n"
  "{\n"
  "LightIntensity = vec3(1,1,1);\n"
  "}\n"
  "vec4 weighted_position =\n"
  "      ( skeleton[VertexWeightIndices[0]] * VertexWeights[0] * vec4 ( VertexPosition, 1 ) ) +\n"
  "      ( skeleton[VertexWeightIndices[1]] * VertexWeights[1] * vec4 ( VertexPosition, 1 ) ) +\n"
  "      ( skeleton[VertexWeightIndices[2]] * VertexWeights[2] * vec4 ( VertexPosition, 1 ) ) +\n"
  "      ( skeleton[VertexWeightIndices[3]] * VertexWeights[3] * vec4 ( VertexPosition, 1 ) );\n"
  "gl_Position = ProjectionMatrix * ViewMatrix * ModelMatrix * vec4(weighted_position.xyz, 1.0);\n"
  "CoordUV = VertexUV;\n"
  "}\n"
}
fragment_shader {
  code:
  "layout(location = 0) in vec3 LightIntensity;\n"
  "layout(location = 1) in vec2 CoordUV;\n"
  "layout ( location = 0 ) out vec4 FragColor;\n"
  "\n"
  "void main()\n"
  "{\n"
  "if(gl_FrontFacing)\n"
  "{\n"
  "FragColor = vec4 ( texture(DiffuseMap,CoordUV) * vec4(LightIntensity, 1.0) );\n"
  "//FragColor = texture(DiffuseMap,CoordUV);\n"
  "}\n"
  "else\n"
  "{\n"
  "FragColor = vec4 ( 1.0,0.5,0.5, 1.0 );\n"
  "}\n"
  "}\n"
}

AEONPRG
glsl_version: 420
vertex_shader {
  code: "out vec3 LightIntensity;\n"
  "void main()\n"
  "{\n"
  "const vec3 Kd = vec3( 1.0f, 1.0f, 1.0f );"
  "const vec3 Ld = vec3( 1.0f, 0.38823529411f, 0.27843137254f );"
  "if ( length ( VertexNormal ) != 0 )\n"
  "{\n"
  "vec3 tnorm = normalize ( NormalMatrix * VertexNormal );\n"
  "vec4 eyeCoords = ModelViewMatrix * vec4 ( VertexPosition, 1.0 );\n"
  "vec3 s = normalize ( -eyeCoords.xyz );\n"
  "LightIntensity = Ld * Kd * max ( dot ( s, tnorm ), 0.0 );\n"
  "}\n"
  "else\n"
  "{\n"
  "LightIntensity = Ld;\n"
  "}\n"
  "gl_Position = ModelViewProjectionMatrix * vec4(VertexPosition, 1.0);\n"
  "}\n"
}
fragment_shader {
  code: "in vec3 LightIntensity;\n"
  "layout ( location = 0 ) out vec4 FragColor;\n"
  "\n"
  "void main()\n"
  "{\n"
  "FragColor = vec4 ( LightIntensity, 1.0 );\n"
  "}\n"
}

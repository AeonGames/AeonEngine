# Copyright (C) 2016-2019 Rodrigo Jose Hernandez Cordoba
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

option(SINGLE_VAO "Use a single Vertex Array per OpenGL context." OFF)

if(SINGLE_VAO)
  add_definitions(-DSINGLE_VAO)
endif()

include_directories(${CMAKE_CURRENT_BINARY_DIR})

set(CMAKE_REQUIRED_QUIET OFF)

set(CMAKE_REQUIRED_INCLUDES ${CMAKE_CURRENT_BINARY_DIR})

check_include_file_cxx("GL/glcorearb.h" HAS_GLCOREARB_H)
if(NOT HAS_GLCOREARB_H)
  message(STATUS "Downloading KHR/khrplatform.h")
  file(DOWNLOAD https://www.khronos.org/registry/EGL/api/KHR/khrplatform.h
                "${CMAKE_CURRENT_BINARY_DIR}/KHR/khrplatform.h"
       SHOW_PROGRESS)
  message(STATUS "Downloading GL/glcorearb.h")
  file(DOWNLOAD https://www.khronos.org/registry/OpenGL/api/GL/glcorearb.h
                "${CMAKE_CURRENT_BINARY_DIR}/GL/glcorearb.h"
       SHOW_PROGRESS)
  set(HAS_GLCOREARB_H 1 CACHE INTERNAL "Downloaded header file" FORCE)
endif()

if(WIN32)
  check_include_files("GL/gl.h;GL/wglext.h" HAS_WGLEXT_H)
  if(NOT HAS_WGLEXT_H)
    message(STATUS "Downloading GL/wglext.h")
    file(DOWNLOAD https://www.khronos.org/registry/OpenGL/api/GL/wglext.h
                  "${CMAKE_CURRENT_BINARY_DIR}/GL/wglext.h"
         SHOW_PROGRESS)
    set(HAS_WGLEXT_H 1 CACHE INTERNAL "Downloaded header file" FORCE)
  endif()
endif()

message(STATUS "Generator ${CMAKE_GENERATOR}")
if(CMAKE_GENERATOR MATCHES "[Mm]ake")
  set(DOLLAR_SIGN "$$")
else()
  set(DOLLAR_SIGN "$")
endif()

add_custom_command(
  OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/glDeclarations.h
         ${CMAKE_CURRENT_BINARY_DIR}/glDefinitions.h
         ${CMAKE_CURRENT_BINARY_DIR}/glAssignments.h
  COMMAND
    ${SED_EXECUTABLE}
    "\"s/^\\s*\\(gl\\S*\\)\\s*${DOLLAR_SIGN}/extern PFN\\U\\1\\EPROC \\1$<SEMICOLON>/g\""
    glFunctions.txt > ${CMAKE_CURRENT_BINARY_DIR}/glDeclarations.h
  COMMAND
    ${SED_EXECUTABLE}
    "\"s/^\\s*\\(gl\\S*\\)\\s*${DOLLAR_SIGN}/PFN\\U\\1\\EPROC \\1 = nullptr$<SEMICOLON>/g\""
    glFunctions.txt > ${CMAKE_CURRENT_BINARY_DIR}/glDefinitions.h
  COMMAND
    ${SED_EXECUTABLE}
    "\"s/^\\s*\\(gl\\S*\\)\\s*${DOLLAR_SIGN}/GLGETPROCADDRESS ( PFN\\U\\1\\EPROC, \\1 )$<SEMICOLON>/g\""
    glFunctions.txt > ${CMAKE_CURRENT_BINARY_DIR}/glAssignments.h
  COMMAND
    ${SED_EXECUTABLE} -i
    "\"s/\\*DISCLAIMER\\*/ THIS FILE WAS AUTOGENERATED, DO NOT EDIT, edit glFunctions.txt instead. /g\""
    ${CMAKE_CURRENT_BINARY_DIR}/glDeclarations.h
  COMMAND
    ${SED_EXECUTABLE} -i
    "\"s/\\*DISCLAIMER\\*/ THIS FILE WAS AUTOGENERATED, DO NOT EDIT, edit glFunctions.txt instead. /g\""
    ${CMAKE_CURRENT_BINARY_DIR}/glDefinitions.h
  COMMAND
    ${SED_EXECUTABLE} -i
    "\"s/\\*DISCLAIMER\\*/ THIS FILE WAS AUTOGENERATED, DO NOT EDIT, edit glFunctions.txt instead. /g\""
    ${CMAKE_CURRENT_BINARY_DIR}/glAssignments.h
  DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/glFunctions.txt
  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
  COMMENT "Generating OpenGL functions for ${CMAKE_GENERATOR}.")

set(OPENGL_RENDERER_HEADERS
    ${CMAKE_CURRENT_BINARY_DIR}/glDeclarations.h
    ${CMAKE_CURRENT_BINARY_DIR}/glDefinitions.h
    ${CMAKE_CURRENT_BINARY_DIR}/glAssignments.h
    OpenGLRenderer.h
    OpenGLWindow.h
    OpenGLWinWindow.h
    OpenGLX11Window.h
    OpenGLFunctions.h
    OpenGLPipeline.h
    OpenGLBuffer.h
    OpenGLMaterial.h
    OpenGLImage.h
    OpenGLMesh.h
    OpenGLFrameBuffer.h
    OpenGLMemoryPoolBuffer.h)

set(OPENGL_RENDERER_SOURCES
    OpenGLRenderer.cpp
    OpenGLWindow.cpp
    OpenGLWinWindow.cpp
    OpenGLX11Window.cpp
    OpenGLBuffer.cpp
    OpenGLPipeline.cpp
    OpenGLMaterial.cpp
    OpenGLImage.cpp
    OpenGLMesh.cpp
    OpenGLFunctions.cpp
    OpenGLFrameBuffer.cpp
    OpenGLMemoryPoolBuffer.cpp
    windows.cpp
    x11.cpp
    Plugin.cpp)

# set_source_files_properties(OpenGLFunctions.cpp PROPERTIES COMPILE_FLAGS "-E")

add_library(OpenGLRenderer
            SHARED
            ${OPENGL_RENDERER_HEADERS}
            ${OPENGL_RENDERER_SOURCES}
            ${CMAKE_SOURCE_DIR}/include/aeongames/Renderer.h)

target_link_libraries(OpenGLRenderer
                      ${OPENGL_LIBRARIES}
                      AeonEngine
                      ProtoBufClasses
                      Threads::Threads)

if(MSVC)
  set_target_properties(
    OpenGLRenderer
    PROPERTIES COMPILE_FLAGS "-WX -D_CRT_SECURE_NO_WARNINGS")
elseif(MINGW OR MSYS)
  set_target_properties(OpenGLRenderer
                        PROPERTIES COMPILE_FLAGS
                                   "-Wall -Werror -Wfatal-errors"
                                   PREFIX
                                   "")
elseif(UNIX)
  set_target_properties(OpenGLRenderer
                        PROPERTIES COMPILE_FLAGS
                                   "-fpic -Wall  -Werror -Wfatal-errors")
endif()
if(USE_CLANG_TIDY)
  set_target_properties(
    OpenGLRenderer
    PROPERTIES
      CXX_CLANG_TIDY
      "${CLANG_TIDY_EXECUTABLE};-fix;-header-filter=aeongames/;${CLANG_TIDY_CHECKS}"
    )
endif()
